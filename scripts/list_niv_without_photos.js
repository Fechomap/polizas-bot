// Cargar variables de entorno desde .env
require('dotenv').config();
const mongoose = require('mongoose');

/**
 * LISTADO DE P√ìLIZAS NIV SIN FOTOS
 * 
 * PROP√ìSITO: Generar listado limpio de NIVs sin fotos para carga manual
 * 
 * SALIDA: Lista de n√∫meros de serie NIV para subir fotos manualmente
 */

async function listNIVWithoutPhotos() {
    try {
        // Buscar URI de MongoDB en diferentes formatos
        const mongoUri = process.env.MONGODB_URI || process.env.MONGO_URI;
        if (!mongoUri) {
            console.log('‚ùå Configura MONGODB_URI o MONGO_URI en las variables de entorno');
            return;
        }
        
        await mongoose.connect(mongoUri);
        console.log('‚úÖ Conectado a MongoDB\n');
        
        const Policy = require('../dist/models/policy').default;
        
        console.log('üìã LISTADO DE P√ìLIZAS NIV SIN FOTOS');
        console.log('='.repeat(50));
        
        // Buscar solo las p√≥lizas NIV ACTIVAS (no eliminadas)
        const polizasNIV = await Policy.find({ 
            esNIV: true,
            estado: 'ACTIVO'  // Solo p√≥lizas activas
        }).sort({ fechaEmision: 1 });
        
        if (polizasNIV.length === 0) {
            console.log('‚ö†Ô∏è  No se encontraron p√≥lizas NIV ACTIVAS en el sistema');
            return;
        }
        
        // Filtrar p√≥lizas sin fotos
        const polizasSinFotos = [];
        
        for (const poliza of polizasNIV) {
            const r2Fotos = poliza.archivos?.r2Files?.fotos?.length || 0;
            const legacyFotos = poliza.archivos?.fotos?.length || 0;
            const totalFotos = r2Fotos + legacyFotos;
            
            if (totalFotos === 0) {
                polizasSinFotos.push({
                    numeroPoliza: poliza.numeroPoliza,
                    titular: poliza.titular,
                    marca: poliza.marca,
                    submarca: poliza.submarca,
                    a√±o: poliza.a√±o,
                    fechaCreacion: poliza.fechaEmision
                });
            }
        }
        
        if (polizasSinFotos.length === 0) {
            console.log('‚úÖ Todas las p√≥lizas NIV tienen fotos');
            return;
        }
        
        // LISTADO PRINCIPAL PARA CARGA MANUAL
        console.log(`üìä RESUMEN: ${polizasSinFotos.length} p√≥lizas NIV sin fotos de ${polizasNIV.length} totales\n`);
        
        console.log('üéØ LISTADO PARA CARGA MANUAL:');
        console.log('-'.repeat(30));
        
        polizasSinFotos.forEach((poliza, index) => {
            console.log(`${index + 1}. ${poliza.numeroPoliza}`);
        });
        
        console.log('\nüìã LISTADO DETALLADO:');
        console.log('-'.repeat(80));
        console.log('N¬∞ | SERIE NIV         | TITULAR              | VEH√çCULO        | FECHA');
        console.log('-'.repeat(80));
        
        polizasSinFotos.forEach((poliza, index) => {
            const num = String(index + 1).padStart(2, ' ');
            const serie = poliza.numeroPoliza.padEnd(17, ' ');
            const titular = (poliza.titular || 'Sin titular').substring(0, 20).padEnd(20, ' ');
            const vehiculo = `${poliza.marca || ''} ${poliza.submarca || ''} ${poliza.a√±o || ''}`.substring(0, 15).padEnd(15, ' ');
            const fecha = poliza.fechaCreacion ? poliza.fechaCreacion.toISOString().substring(0, 10) : 'N/A';
            
            console.log(`${num} | ${serie} | ${titular} | ${vehiculo} | ${fecha}`);
        });
        
        console.log('-'.repeat(80));
        
        // LISTA SIMPLE PARA COPIAR/PEGAR
        console.log('\nüìù LISTA SIMPLE (para copiar/pegar):');
        console.log('-'.repeat(30));
        const listaSerie = polizasSinFotos.map(p => p.numeroPoliza).join('\n');
        console.log(listaSerie);
        
        // ESTAD√çSTICAS ADICIONALES
        console.log('\nüìä ESTAD√çSTICAS:');
        console.log(`- Total p√≥lizas NIV: ${polizasNIV.length}`);
        console.log(`- P√≥lizas con fotos: ${polizasNIV.length - polizasSinFotos.length}`);
        console.log(`- P√≥lizas sin fotos: ${polizasSinFotos.length}`);
        console.log(`- Porcentaje sin fotos: ${((polizasSinFotos.length / polizasNIV.length) * 100).toFixed(1)}%`);
        
        // AN√ÅLISIS POR A√ëO
        const porA√±o = {};
        polizasSinFotos.forEach(p => {
            const a√±o = p.a√±o || 'N/A';
            porA√±o[a√±o] = (porA√±o[a√±o] || 0) + 1;
        });
        
        console.log('\nüìà DISTRIBUCI√ìN POR A√ëO:');
        Object.entries(porA√±o).sort().forEach(([a√±o, cantidad]) => {
            console.log(`- ${a√±o}: ${cantidad} p√≥lizas`);
        });
        
        console.log('\nüí° INSTRUCCIONES PARA CARGA MANUAL:');
        console.log('1. Usa la "LISTA SIMPLE" de arriba');
        console.log('2. Para cada serie NIV, busca las fotos originales');
        console.log('3. En el bot, usa "Subir Archivos" para cada p√≥liza');
        console.log('4. Las fotos se guardar√°n correctamente en la p√≥liza NIV');
        
    } catch (error) {
        console.error('‚ùå Error:', error.message);
    } finally {
        await mongoose.disconnect();
        console.log('\n‚úÖ Desconectado de MongoDB');
    }
}

// Ejecutar si se llama directamente
if (require.main === module) {
    listNIVWithoutPhotos();
}

module.exports = { listNIVWithoutPhotos };